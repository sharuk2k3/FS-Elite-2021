/*
Sampoornesh Babu is learning arithmatics.
His teacher given him a task to find the minimum number of operations
required to convert a given integer I to 1.

Sampoornesh is allowed to perform the following operations:
	- If I is even, convert I with I/2 .
	- In I is odd, convert I with either I+1 or I-1.

Now it's your task to help Sampoornesh Babu to find and print
the minimum number of operations required.

Input Format:
-------------
An integer I.

Output Format:
--------------
Print an integer, the minimum number of operations required.


Sample Input-1:
---------------
10

Sample Output-1:
----------------
4

Explanation:
------------
10 -> 5 -> 4-> 2 -> 1.


Sample Input-2:
---------------
15

Sample Output-2:
----------------
5

Explanation:
------------
15 -> 16 -> 8 -> 4 -> 2 -> 1.

Test Cases:
case =1
input =76356789
output =37

case =2
input =87566
output =22

case =3
input =123456
output =20

case =4
input =2020
output =13

case =5
input =156
output =9

case =6
input =18
output =5

case =7
input =1425272311
output =39

case =8
input =2125212345
output =42

*/
Solution:
import java.util.*;

class NumberReplacement{
	public static int numberReplacement(int n) {
	    int c = 0;
	    while (n != 1) {
		if ((n & 1) == 0) {
		    n >>>= 1;
		} else if (n == 3 || Integer.bitCount(n + 1) > Integer.bitCount(n - 1)) {
		    --n;
		} else {
		    ++n;
		}
		++c;
	    }
	    return c;
	}
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		System.out.println(numberReplacement(n));
	}
}