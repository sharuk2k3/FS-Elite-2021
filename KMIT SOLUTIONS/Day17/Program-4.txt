/*
Kittu playing a game, the game contains a panel of N cells.
Each cell in the panel is a number panel[i], 
Kittu will win when he reaches 0.

The rules to play the game are as follows:
	- Kittu's intital position is S.
	- When Kittu is at index i, he can move to position-(i + panel[i] ) or 
	position-(i - panel[i]).
	- Kittu cannot move outside the panel.
	- if he reaches any panel[i] has value 0, He wins.	

Your task to find that whether kittu wins or not.
if he wins print "true".
if there is no way to reach 0 then print "false".

NOTE: cell positions are numbered from 0 to N-1.
0<= panel[i] < N


Input Format:
-------------
Line-1: Two integers N and S, number of cells in the panel and 
		Kittu's initial position.
Line-2: N space separated integers.

Output Format:
--------------
Print a boolean value.


Sample Input-1:
---------------
7 5
4 2 3 0 3 1 2

Sample Output-1:
----------------
true

Explanation: 
------------
All possible ways to reach at position 3 with value 0 are: 
position 5 -> position 4 -> position 1 -> position 3 
position 5 -> position 6 -> position 4 -> position 1 -> position 3 


Sample Input-2:
---------------
5 2
3 0 2 1 2

Sample Output-2:
----------------
false

Test Cases:
case =1
input =7 5
4 2 3 0 3 1 2
output =true

case =2
input =7 2
4 2 3 0 3 1 2
output =true

case =3
input =5 2
3 0 2 1 2
output =false

case =4
input =10 3
4 5 3 4 0 1 4 7 5 6
output =true

case =5
input =10 2
4 5 3 4 0 2 4 7 5 6
output =true

case =6
input =10 2
7 9 6 8 0 9 6 7 5 6
output =false

case =7
input =10 7
7 9 6 8 0 5 6 7 5 6
output =false

case =8
input =15 7
1 2 3 4 5 0 6 7 8 9 0 10 11 12 13
output =false

case =9
input =10 2
3 2 1 4 0 5 8 6 7 9
output =false

case =10
input =10 4
3 2 1 4 0 5 8 6 7 9
output =true

*/
Solution:
import java.util.*;

class CanReach {
   public boolean canReach(int[] arr, int start) {
        if(start<0 || start>=arr.length || arr[start]<0) return false;
        if(arr[start] == 0) return true;

        arr[start] = -arr[start];
        return canReach(arr, start + arr[start]) || canReach(arr, start - arr[start]);
    }
	
	public static void main(String[] args) { 
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int start=sc.nextInt();
		int arr[]=new int[n];
		for(int j=0;j<n;j++)
			arr[j]=sc.nextInt();
		System.out.println(new CanReach().canReach(arr,start) ); 
	}
}