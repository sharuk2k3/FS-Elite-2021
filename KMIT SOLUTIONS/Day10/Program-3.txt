/*
Giridhar went to a bank to get 1-rupee coins for N rupees.
In the cash counter, there are unlimited CoinBags, 
each bag contains square number of coins (i.e, 1,4,9,16,...)

The clerk in the cash counter needs to provide the CoinBags,
Find the minimum number of CoinBags to give to Giridhar, whose total value equals N rupees.

Input Format:
-------------
An integer N.

Output Format:
--------------
Print an integer, minimum number of bags.


Sample Input-1:
---------------
13

Sample Output-1:
----------------
2

Explanation: 13 = 9 + 4

Sample Input-2:
---------------
21

Sample Output-2:
----------------
3

Explanation: 21 = 16+4+1.


Test Casess:
case =1
input =13
output =2

case =2
input =12
output =3

case =3
input =35
output =3

case =4
input =1023
output =4

case =5
input =4092
output =4

case =6
input =156165
output =3

case =7
input =123321
output =3

case =8
input =111111
output =4
*/
Solution:
import java.util.*;

public class PerfectSquares {

	public static int numSquares(int n) {

	    ArrayList<Integer> square_nums = new ArrayList<Integer>();
	    for (int i = 1; i * i <= n; ++i) {
	      square_nums.add(i * i);
	    }

	    Set<Integer> queue = new HashSet<Integer>();
	    queue.add(n);

	    int level = 0;
	    while (queue.size() > 0) {
	      level += 1;
	      Set<Integer> next_queue = new HashSet<Integer>();

	      for (Integer remainder : queue) {
	        for (Integer square : square_nums) {
	          if (remainder.equals(square)) {
	            return level;
	          } else if (remainder < square) {
	            break;
	          } else {
	            next_queue.add(remainder - square);
	          }
	        }
	      }
	      queue = next_queue;
	    }
	    return level;
	  }
	
	
	 public static void main(String args[] ) {
		 Scanner scan = new Scanner(System.in);
		       int n=scan.nextInt();     
		       System.out.println(numSquares(n));
	}
}