/*In a class of XII, computer teacher asked one of the student 
to perform a task as practical session .

There is a box contains N balls in it, each ball is printed 
with a positive integer. The teacher ask the student to split 
all the balls in the box into ball-groups,
each group should contain exatly S balls.

The student has to pick the ball-groups as follows:
	- the balls should be numbered consecutively.
	e.g., 1,2 3, 4 or 4,5,6,7 etc.

Finally, the student should say whether it is possible to 
split all the balls in the box, into ball-groups accordingly.

Now, its your task to help the student to find whether it is possible or not.
if possible, print "true".
otherwise, print "false".


Input Format:
-------------
Line-1: Two integers N and S, number of balls and size of ball-group.
Line-2: N space separated integers, integers printed on each ball.

Output Format:
--------------
Print a boolean value, whether it is possible to split all the balls into groups.


Sample Input-1:
---------------
8 4
2 6 3 4 3 5 4 5

Sample Output-1:
----------------
true

Explanation:
-------------
Ball-groups are [2,3,4,5] and [3,4,5,6]


Sample Input-2:
---------------
12 3
12 2 9 5 3 4 13 7 6 8 11 7

Sample Output-2:
----------------
true

Explanation:
-------------
Ball-groups are [2,3,4], [5,6,7], [7,8,9] and [11,12,13]


Sample Input-3:
---------------
6 3
2 5 7 3 4 8

Sample Output-3:
----------------
false

Explanation:
-------------
you cannot form ball groups.


Test Cases:
case =1
input =8 4
2 6 3 4 3 5 4 5
output =true

case =2
input =6 3
2 5 7 3 4 8
output =false

case =3
input =12 3
12 2 9 5 3 4 13 7 6 8 11 7
output =true

case =4
input =100 5
17 18 19 10 11 12 13 14 15 16 17 18 19 10 12 12 11 17 18 19 10 11 12 13 14 15 16 17 18 19 10 12 12 11 12 13 19 10 11 13 14 15 16 14 13 14 15 16 17 10 11 15 16 17 18 19 10 11 12 13 14 15 16 17 18 18 19 12 13 19 10 11 13 14 15 16 14 13 14 15 16 17 10 11 15 16 17 18 19 10 11 12 13 14 15 16 17 18 18 19
output =true

case =5
input =200 5
17 18 19 10 11 12 13 14 6 8 4 8 5 7 6 8 9 7 6 5 4 8 5 7 6 8 9 9 7 6 5 4 8 5 7 6 8 9 7 6 5 15 16 17 18 19 10 12 12 11 17 18 19 10 11 12 13 14 15 16 8 9 7 6 5 4 8 5 7 4 8 5 7 6 8 9 7 6 5 4 8 5 7 6 7 6 5 4 8 5 16 17 18 18 19 12 13 19 10 11 13 14 15 16 6 8 9 7 6 5 4 8 5 7 6 8 9 7 6 5 4 8 5 7 6 8 9 7 6 5 14 13 14 15 16 17 10 11 15 16 17 18 19 10 11 12 13 14 15 16 17 18 18 19 7 6 8 9 7 6 5 4 8 5 7 17 18 19 10 12 12 11 12 13 19 10 11 13 14 15 16 14 13 14 15 16 17 10 11 15 16 17 18 19 10 11 12 13 14 15 
output =true

case =6
input =200 8
17 18 19 10 11 12 13 14 6 8 4 8 5 7 6 8 9 7 6 5 4 8 5 7 6 8 9 9 7 6 5 4 8 5 7 6 8 9 7 6 5 15 16 17 18 19 10 12 12 11 17 18 19 10 11 12 13 14 15 16 8 9 7 6 5 4 8 5 7 4 8 5 7 6 8 9 7 6 5 4 8 5 7 6 7 6 5 4 8 5 16 17 18 18 19 12 13 19 10 11 13 14 15 16 6 8 9 7 6 5 4 8 5 7 6 8 9 7 6 5 4 8 5 7 6 8 9 7 6 5 14 13 14 15 16 17 10 11 15 16 17 18 19 10 11 12 13 14 15 16 17 18 18 19 7 6 8 9 7 6 5 4 8 5 7 17 18 19 10 12 12 11 12 13 19 10 11 13 14 15 16 14 13 14 15 16 17 10 11 15 16 17 18 19 10 11 12 13 14 15 
output =false

case =7
input =40 8
33 34 35 36 37 38 39 40 4 5 6 7 52 53 54 55 56 57 58 59 71 72 73 74 75 76 77 78 91 90 89 87 86 88 85 84 8 9 10 11
output =true

case =8
input =40 8
4 5 6 7 8 9 10 71 72 73 74 75 52 53 54 55 56 57 58 59 76 77 78 91 90 89 87 86 88 85 84 11 12 33 34 35 36 37 38 38 40
output =false

*/
Solution:
import java.util.*;
class DivideArray{	
	public boolean isPossibleDivide(int[] nums, int k) {
        if (nums.length % k != 0) {
          return false;
        }

        int[] map = new int[k];
        Set<Integer> set = new HashSet();
        for (int i = 0; i < nums.length; i++) {
          set.add(nums[i]);
        }

        for (int i = 0; i < nums.length; i++) {
          int key = nums[i] % k;
          if (set.contains(nums[i] - 1) || set.contains(nums[i] + 1)) {
            map[key] += 1;
          } else {
            return false;
          }
        }

        int val = map[0];
        for (int i = 1; i < map.length; i++) {
          if (val != map[i]) {
            return false;
          }
        }
        return true;
    }

	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int k=sc.nextInt();
		int arr[]=new int[n];
		for(int i=0;i<n;i++)
			arr[i]=sc.nextInt();
		
		System.out.println(new DivideArray().isPossibleDivide(arr,k));
	}
}