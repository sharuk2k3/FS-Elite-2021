/*
Tejaswi playing a game. Game has a display of N numbers in a row, nums[].
Tejaswi has to pick the numbers one after the other.

Once Tejaswi picks a number num[i], she will score num[i] points and 
the number will be disappared on the board, simultaneously all the numbers 
having the value num[i]+1 or num[i]-1 also disappears. 

Tejaswi has to select the numbers, such that no more numbers will be left over 
on the board.

Tejaswi wants to score maximum number of points.

Initially Tejaswi has 0 points with her.
Can you help Tejaswi to score maximum number of points.

Input Format:
-------------
Line-1 -> an integers N, number of numbers on the game board.
Line-2 -> N space separated integers, numbers on the game board nums[].

Output Format:
--------------
Print an integer as result, maximum score she can get.


Sample Input-1:
---------------
3
4 5 3

Sample Output-1:
----------------
8

Explanation: 
------------
Pick a number 5 to score 5 points, simultaneously 4 is disappeared from display.
Then, pick number 3 to score 3 points.
Totally 8 is the score.


Sample Input-2:
---------------
6
4 4 5 5 5 6

Sample Output-2:
----------------
15

Explanation: 
-------------
Delete 5 to earn 5 points, deleting both 4's and the 6.
Then, delete 5 again to earn 5 points, and 5 again to earn 5 points.
Totally 15 is the score.

Pick a number 5 to score 5 points, simultaneously all 4's and 6 are disappeared 
from display. Then, again pick the number 5 to score 5 points.
And again pick the number 5 to score 5 points. Totally 15 is the score.


Test Cases:
case =1
input =3
4 5 3
output =8

case =2
input =6
4 4 5 5 5 6
output =15

case =3
input =20
8 6 6 8 9 10 6 8 6 10 6 6 8 6 8 10 7 7 6 8
output =126

case =4
input =50
16 13 15 14 12 13 13 13 13 15 15 16 12 15 13 13 12 12 16 12 11 12 15 13 12 16 16 11 15 13 15 13 12 16 16 16 15 13 16 16 11 14 11 16 15 14 15 14 15 14
output =363

case =5
input =50
4 7 5 8 6 5 6 5 7 4 6 5 6 7 6 4 6 4 6 6 5 4 7 8 7 5 8 5 8 5 5 7 5 7 6 8 7 4 5 7 7 5 6 8 7 7 8 4 7 4
output =151

case =6
input =75
12 12 11 7 14 14 6 9 6 7 12 6 13 12 11 6 14 7 6 14 9 11 11 13 12 9 10 13 7 10 8 7 13 14 7 9 9 9 11 14 11 7 13 6 6 12 13 14 7 12 6 12 9 7 12 6 11 12 8 14 10 12 11 10 11 11 14 8 11 13 8 10 13 11 7
output =394

case =7
input =150
14 15 15 17 14 11 15 13 16 20 20 19 15 14 16 12 13 20 19 17 18 15 14 14 11 18 11 17 19 13 20 19 14 11 19 13 19 17 13 20 17 13 12 13 11 13 19 13 19 18 19 17 18 12 20 14 19 12 19 19 19 19 12 19 16 13 11 16 14 16 20 14 20 14 14 16 12 13 16 17 17 15 15 11 16 14 18 14 19 15 18 20 19 19 15 18 19 16 19 12 17 14 20 19 14 15 13 11 13 14 17 14 16 15 11 19 17 16 14 19 16 14 19 15 14 17 20 15 17 19 17 14 20 17 11 11 20 11 14 12 11 14 17 20 19 13 18 19 14 13
output =1318

case =8
input =500
44 34 23 78 54 16 35 99 37 27 94 96 35 44 82 88 56 74 27 41 63 34 53 30 56 52 64 90 65 54 20 44 49 34 11 99 36 48 20 32 87 28 91 79 88 96 70 27 73 62 92 26 56 67 80 72 23 13 75 51 69 85 64 33 79 44 25 76 49 91 44 42 17 46 34 71 52 87 21 90 38 65 31 81 77 50 15 68 24 43 39 84 96 77 99 20 71 48 69 13 64 65 96 88 41 17 23 76 70 64 70 84 90 64 13 28 38 28 31 70 57 31 77 63 42 96 92 56 25 60 57 86 67 21 67 52 28 62 46 76 18 52 95 42 98 77 52 35 43 54 39 79 14 36 46 77 29 57 94 37 17 46 11 13 16 16 39 23 16 40 78 17 99 50 42 69 21 31 34 96 58 50 93 39 42 84 70 18 61 66 49 75 26 72 15 72 70 11 88 72 64 58 75 47 56 69 51 87 45 86 63 16 72 75 78 97 16 75 17 41 48 98 96 56 73 43 76 17 79 44 31 14 50 20 46 27 49 23 19 44 65 76 58 26 81 79 55 92 87 24 29 19 69 19 56 18 62 60 45 70 63 14 56 71 19 32 58 82 37 60 93 40 70 47 15 40 44 92 18 13 62 83 43 62 17 96 50 48 54 92 55 76 48 72 29 70 50 94 35 34 33 59 85 76 43 58 46 18 88 82 36 88 14 84 39 24 59 19 61 26 53 56 38 97 26 12 22 55 27 48 68 85 30 98 91 71 93 80 22 76 28 31 72 77 12 30 43 13 15 96 23 66 62 59 55 87 26 66 86 66 13 46 41 84 71 42 40 99 43 24 55 11 18 75 58 79 69 27 19 38 23 20 55 82 11 35 23 92 89 19 93 15 38 69 38 35 28 57 56 76 36 44 23 82 47 41 69 43 94 66 56 44 90 20 89 29 40 36 27 22 32 57 74 78 77 52 25 27 17 36 39 17 49 21 61 52 76 70 16 23 46 53 67 56 76 68 75 75 83 18 42 92 58 23 17 34 15 79 54 42 49 59 13 43 76 13 15 99 19 36 56 35 23 76 31 24 57 40 42 84 25 27 91 41 21 85 23 40 72 37 36 33 40 45 24 35 99 28 85 58
output =15428
*/
Solution:
import java.util.*;

class DeleteAndEarn {
	public int deleteAndEarn(int[] nums) {
        if (nums.length == 0) return 0;
        int max = 0;
        for (int num : nums) max = Math.max(num, max);
        if (max == 1) return nums.length;
        int[] dp = new int[max+1];
        for (int num : nums) dp[num] += num;
        dp[dp.length-2] = Math.max(dp[dp.length-2], dp[dp.length-1]);
        for (int i = dp.length-3; i >= 1; i--) {
            dp[i] = Math.max(dp[i+1], dp[i] + dp[i+2]);
        }
        return Math.max(dp[1], dp[2]);
	}
	public static void main(String args[] ) {
	    Scanner sc = new Scanner(System.in);
		int N= sc.nextInt();
		int[] nums = new int[N];
		for(int i=0;i<N;i++)
			nums[i]= sc.nextInt();

		System.out.println(new DeleteAndEarn().deleteAndEarn(nums));
	}
}