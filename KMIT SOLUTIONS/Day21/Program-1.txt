/*
Aziz is given a set of integers SOI[], consists of both +ve and -ve integers.

Aziz wants to find the maximum sum of contiguous subset of the SOI, with a twist.

You have to perform the following operation before finding the maximum sum:
- You are allowed to replace exactly one integer X, with its square value (X*X).

Can you please help Aziz to find out the maximum sum of contiguous subset.


Input Format:
-------------
Single line of space separated integers, values of the array.

Output Format:
--------------
Print an integer value as result.


Sample Input-1:
---------------
-5 -3 1 2 -3 4 -4 3

Sample Output-1:
----------------
26

Explanation:
------------
max sum is: (-5)^2 + (-3) + 1 + 2 + (-3) + 4 = 26


Sample Input-2:
---------------
2 -2 2 2 -2 -2 2

Sample Output-2:
----------------
10

Explanation:
------------
max sum is: 2 +(-2)^2 + 2 + 2 = 10

Test Cases:
case =1
input =-5 -3 1 2 -3 4 -4 3
output =26

case =2
input =2 -2 2 2 -2 -2 2
output =10

case =3
input =13 -11 -6 13 4 9 6 -13 -14 -5 12 10 -1 -3 -15
output =243

case =4
input =3 -12 13 14 11 -7 0 1 9 -12 0 -7 3 -9 -1
output =223

case =5
input =-8 5 -6 -1 -8 1 14 1 7 -2 -14 12 6 14 -8 14 -8 -11 -14 -3
output =255

case =6
input =2 10 6 5 -14 -6 -14 -3 1 7 -2 -15 3 -12 8 11 5 -6 14 -7
output =254

case =7
input =-11 -18 4 -2 1 -9 -13 -20 19 9 -8 5 7 -8 -12 1 9 -3 -5 -8 -2 -7 12 1 17 -6 15 8 -14 10
output =444

case =8
input =5 -6 0 -3 2 18 -13 11 -1 -13 14 0 -17 -6 7 20 -2 -9 18 10 -12 -10 2 -16 12 16 16 -1 11 3
output =445

*/
Solution:

import java.io.*;
import java.util.*;

class MaxSumofSubArray {
    public int maxSumAfterOperation(int[] nums) {
        int maxEndHere0 = 0; 
        int maxEndHere1 = 0; 
        int maxSoFar = 0;
        for (int num: nums) {
            maxEndHere1 = Math.max(Math.max(maxEndHere0, 0) + num * num, maxEndHere1 + num); 
            maxEndHere0 = Math.max(maxEndHere0, 0) + num; 
            maxSoFar = Math.max(maxSoFar, maxEndHere1);
        }
        return maxSoFar;
    }
	
	public static void main(String args[] ) throws IOException {
	    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String str = br.readLine();
		String[] arr = str.split(" ");
		int[] nums = Arrays.asList(arr).stream().mapToInt(Integer::parseInt).toArray();
		System.out.println(new MaxSumofSubArray().maxSumAfterOperation(nums));
	}
}